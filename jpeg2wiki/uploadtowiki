#!/usr/bin/perl
use strict;
use warnings;
use FindBin qw($Bin $Script);
use XML::Simple;
use WWW::Mechanize;
use LWP::UserAgent;
use Data::Dumper;
use Carp qw(croak);

die "Syntax: $Script <sourcedir>" unless @ARGV == 1;
my ($sourcedir) = @ARGV;
die "Source directory invalid: $sourcedir" unless -d $sourcedir;

my %cfg;
open C, "<$ENV{HOME}/.uploadtowiki" or die "Failed to read config file $ENV{HOME}/.uploadtowiki: $!";
while (my $l = <C>) {
    chomp $l;
    my ($k, $v) = $l =~ /^([a-zA-Z0-9_]+)\s*=\s*(.+)$/;
    next unless $k;
    $cfg{$k} = $v;
}
close C;

for my $k (qw'username password') {
    die "Missing key in $ENV{HOME}/.uploadtowiki: $k" unless exists $cfg{$k};
}

my $m = new WWW::Mechanize(autocheck=>0);

sub dieState($) {
    my $msg = shift @_;

    open O, ">state.html" or die "Failed to write state: $!";
    print O $m->content;
    close O;

    croak $msg;
}

$m->get("http://osaa.dk/wiki/index.php?title=Speciel:Log_p%C3%A5&returnto=Forside");
$m->submit_form(
    form_number => 1,
    fields      => {
	wpName     => $cfg{username},
	wpPassword => $cfg{password},
    },    
    button    => 'wpLoginattempt',
    );

dieState("Got to ".$m->uri) unless $m->uri eq 'http://osaa.dk/wiki/index.php/Forside';

my $metaFile = "$sourcedir/import.xml";
die "Unable to find $metaFile" unless -f $metaFile;

my $meta = XMLin($metaFile, KeyAttr=>['id'], ForceArray=>['item','image']);

for my $id (keys %{$meta->{item}}) {
    my $item = $meta->{item}{$id};
    
    for my $f (qw'owner acquired url type category title') {
	die "Missing or empty field: $f for $id" unless $item->{$f};
    }
    
    # Get $url to check that it returns 404 right now.
    $m->get($item->{url});
    if ($m->status == 200) {
	print "Item ID $id called $item->{title} already exists, skipping.\n";
	next;

    } elsif ($m->status != 404) {
	print "Whoops, got error for item ID $item->{id} called $item->{title}, skipping.\n";
	next;
    }

 
    # Upload all the images as gb-$id-0.jpeg gb-$id-1.jpeg and so on
    my @images;
    my $ii = 0;
    for my $i (@{$item->{image}}) {
	next if $i->{hide};

	my ($ext) = $i->{name} =~ /\.([^\.]+)$/;
	$ext = lc $ext;
	$ext = 'jpeg' if $ext eq 'jpg';
	my $wn = "gb-$id-$ii.$ext"; $ii++;
	push @images, $wn;

	$m->get("http://osaa.dk/wiki/index.php/Fil:$wn");
	if ($m->status == 200 and $m->content !~ /No file by this name exists/) {
	    print "The image $i->{name} already exists as $wn, skipping\n";
	    next;
	}

	print "Uploading $i->{name} as $wn\n";

	$m->get("http://osaa.dk/wiki/index.php/Speciel:Upload");    
	dieState "Failed to get to upload page" unless $m->status == 200;

	my $ifn = "$sourcedir/$i->{name}";
	my $ofn;
	if ((stat($ifn))[7] > 1000*1000) {	
	    $ofn = "/tmp/$wn";
	    system("convert", $ifn, '-resize', '1500', $ofn)
		and die "Failed to convert $ifn to a reasonable size";
        } else {
	    $ofn = $ifn;
	}
	$m->submit_form(
	    form_number => 1,
	    fields      => {
		wpUploadFile => $ofn,
		wpDestFile   => $wn,		
	    },    
	    button    => 'wpUpload',
	    );
	dieState "Failed to upload $ofn as $wn" unless $m->status == 200;
    }

    dieState "Did not find any images" unless @images; 

    print "Creating page $item->{url} for $item->{title}\n";
    my $wiki = <<"EOW";
{{Stub}}

{{Infobox gear
|title        = $item->{title}
|image        = $images[0]

|id           = $id
|category     = $item->{category}
|categorizer  = [[User:$cfg{username}|$cfg{username}]]
|owner        = $item->{owner}
|type         = $item->{type}
|acquired     = $item->{acquired}
}}

==About==

EOW
    if (@images > 1) {
        $wiki .= "==Photos==\n\n";
        for my $i (@images[1..@images-1]) {
	    $wiki .= " [[Fil:$i|500px]]\n";
        }
    }

    
    # Start by creating the page with the ID:
    $m->get($item->{url});
    $m->follow_link(text_regex => qr/(create|edit this page)/);    
    $m->submit_form(
	form_number => 1,
	fields      => {
	    wpTextbox1 => $wiki,
	},    
	button    => 'wpSave',
	);
    dieState "Failed to upload $item->{title} as $id" unless $m->status == 200;

    
    # Move ID page to the page with the real title
    $m->get($item->{url});
    $m->follow_link(text_regex => qr/move/i);
    $m->submit_form(
	form_number => 1,
	fields      => {
	    wpNewTitle => $item->{title},
	},    
	button    => 'wpMove',
	);
    dieState "Failed to rename $id -> $item->{title}" unless $m->status == 200;

#    die Dumper $item;   
#    dieState("Got to: ".$m->uri);
}

